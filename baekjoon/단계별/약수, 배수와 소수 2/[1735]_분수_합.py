# ------------------------------------------------------
# 문제 번호 : [1735] 분수 합
# 플랫폼 : Baekjoon
# 링크 : https://www.acmicpc.net/problem/1735
# 난이도 : X
# 분류 : 수학, 정수론, 유클리드 호제법
# 날짜 : 2024-11-05
# ------------------------------------------------------

# 유클리드 호제법(Euclidean algorithm)은 2개의 자연수 또는 정식의 최대공약수를 구하는 알고리즘의 하나이다.
# 호제법이란 말은 두 수가 서로 상대방 수를 나누어 결국 원하는 수를 얻는 알고리즘을 나타낸다.
# 2개의 자연수 a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다. 
# 이 성질에 따라, b를 r로 나눈 나머지 r'를 구하고, 다시 r을 r'로 나눈 나머지를 구하는 과정을 반복하여 
# 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.

# 문제 설명 :
# 분수 A/B는 분자가 A, 분모가 B인 분수를 의미한다. A와 B는 모두 자연수라고 하자.
# 두 분수의 합 또한 분수로 표현할 수 있다. 두 분수가 주어졌을 때, 그 합을 기약분수의 형태로 구하는 프로그램을 작성하시오. 
# 기약분수란 더 이상 약분되지 않는 분수를 의미한다.

# 문제 풀이 :
# math 의 gcd 함수는 최대공약수를 구해주는 함수이다.

# 코드
import math

A = list(map(int, input().split()))
B = list(map(int, input().split()))
A, B = A[0]*B[1] + A[1]*B[0], A[1]*B[1]

gcd = math.gcd(A, B)
    
print(f"{A//gcd} {B//gcd}")
